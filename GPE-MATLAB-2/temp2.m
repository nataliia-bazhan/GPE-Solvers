clear;

% class contaning the physical properties of the system
config = Config(struct('N', 1.4*10^5,... % the amount of condensted particles
                       'ChE', 'Rb87', ... % chemical element: Rb87/Na23
                       'gamma', 0.05, ... % dissipation parameter
                       'T', 20*10^(-9))); % temperature

grid = Grid(struct('GPU', 1, ...
                   'N', 256,...
                   'Nz', 8, ...
                   'L', 60*10^(-6),...
                   'Lz', 10*10^(-6)));

phase = Phase(struct('R_min', 16*10^(-6), ... 
                     'n', 9, ...
                     'grid', grid));
                       
Vb = PotentialVertical(struct('R_min', 16*10^(-6), ... 
                              'w', 0, ...
                              'n', 9, ...
                              'U_max', 8.8*10^(-31), ...
                              'a_max', 1.1*10^(-6), ...
                              't1', 0.16, ...
                              't2', 0.01, ...
                              'grid', grid, ...
                              'config', config));
                         
Vt = PotentialToroidal(struct('wr', 2*pi*200, ...
                              'wz', 2*pi*1580, ...
                              'nRings', 2, ...
                              'R', 19.5*10^(-6), ... 
                              'R2', 13*10^(-6), ... 
                              'grid', grid, ...
                              'config', config));

[Psi, mu] = Init(struct('phase', phase, ...
                        'Vt', Vt, ...
                        'Vb', Vb, ...
                        'grid', grid, ...
                        'config', config)).getITP(); 

dyn = Dynamics(struct('Folder', 'Data/random 1',...
                      'Vt', Vt, ...
                      'Vb', Vb, ...
                      'grid', grid, ...
                      'config', config));
                  
t = 0;
dyn.runSGPE(Psi, mu, t)
%clf;
%isosurface(grid.X, grid.Y, grid.Z, abs(Psi).^2, 10^(19))
 %imagesc(grid.r, grid.rz, squeeze(abs(Psi(:, grid.N/2, :).^2)))
%imagesc(grid.r, grid.r, abs(Psi(:, :, grid.Nz/2).^2))
%colorbar;
%shg
